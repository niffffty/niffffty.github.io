<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>吴广喆的blog</title><link>https://niffffty.github.io</link><description>个人学习记录</description><copyright>吴广喆的blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/94451088?v=4</url><title>avatar</title><link>https://niffffty.github.io</link></image><lastBuildDate>Thu, 20 Feb 2025 12:41:12 +0000</lastBuildDate><managingEditor>吴广喆的blog</managingEditor><ttl>60</ttl><webMaster>吴广喆的blog</webMaster><item><title>香橙派Orange PI zero3实现NAS</title><link>https://niffffty.github.io/post/xiang-cheng-pai-Orange%20PI%20zero3-shi-xian-NAS.html</link><description>
### 概括：

- 香橙派+CasaOS+移动硬盘来实现内网访问存储
- Cpolar进行内网穿透实现外网访问

### 烧录香橙派系统系统

1. 硬件准备：

   1. 香橙派zero3
   2. 读卡器、sd卡（我用的32G）
   3. typeC线（香橙派电源）
   4. 外接显示器+转接头（香橙派是Micro HDMI口）
   5. 键盘

2. 烧录系统

   1. sd卡+读卡器插电脑
   2. 官网下载镜像：打开官网-服务于下载-下载-搜索zero3-下拉选择下载ubuntu镜像
   3. 下载完解压出img后缀镜像文件，用烧录软件ether烧录系统到sd卡中，烧录完成后将sd卡插到香橙派上
   4. 给香橙派插上电源、显示器、键盘，电源灯亮即可开机，屏幕显示OrangePI即为烧录成功

3. 配置系统

   1. 配置网络（若用网线则可忽略）
      1. 命令行输入sudo su获取root权限，密码默认为orangepi
      2. 输入orangepi-config进入配置界面，方向键进入network，再进入WIFI，输入密码连接Wifi
   2. 设置中国时区
      1. 返回到配置界面主菜单，选择Personal-Timezone-Asia-shanghai
   3. 获取Wifi分配给香橙派的ip地址
      1. 返回到命令行，输入ip address，输入的3：inet后边的即ip地址（我的是192.168.18.104）
      2. 现在就不需要显示器和键盘了
   4. 用自己的电脑ssh连接香橙派
      1. 使用putty连接：用户名为root，密码默认为orangepi，地址为刚刚获取的ip地址
      2. 能看到此页面即配置完成：&lt;img src='C:\Users\wuguangzhe\AppData\Roaming\Typora\typora-user-images\1740053154207.png' alt='1740053154207' style='zoom:33%;' /&gt;

   ### 部署CasaOS

   1. 登录casaos的官网，下拉
   2. 找到`curl -fsSL https://get.casaos.io | sudo bash`，复制到香橙派的命令行，耐心等待部署
   3. 在同一个wifi下输入刚才获取的ip地址即可内网访问部署在香橙派上的CasaOS了，根据提示注册一个casaOS的账号
   4. 进入以下页面即部署完成（可以通过下方的Files进行文件存储与下载，若需扩大储存可外插移动硬盘）&lt;img src='C:\Users\wuguangzhe\AppData\Roaming\Typora\typora-user-images\1740053460648.png' alt='1740053460648' style='zoom:33%;' /&gt;

   ### Cpolar内网穿透

   1. 下载Cpolar

      ```
      #在香橙派命令行输入：
      curl -L https://www.cpolar.com/static/downloads/install-release-cpolar.sh | sudo bash		#下载cpolar
      
      cpolar version	#查看Cpolar是否下载成功
      
      ```

      

   2. token认证

      1. 登录cpolar官网，注册，登录

      2. 点击左侧的认证，复制自己的token&lt;img src='C:\Users\wuguangzhe\AppData\Roaming\Typora\typora-user-images\1740054233457.png' alt='1740054233457' style='zoom:50%;' /&gt;

      3. 命令行中输入`cpolar authtoken abcd`，abcd为刚才复制的token

      4. 简单的穿透测试

         ```
         cpolar http 8080		#可以看到成功生成了两个指向本机8080端口的随机公网地址
         ```

   3. 向香橙派系统中添加cpolar服务

      ```
      systemctl enable cpolar
      systemctl start cpolar		#开启服务
      systemctl status cpolar		#查看服务
      ```

      &lt;img src='C:\Users\wuguangzhe\AppData\Roaming\Typora\typora-user-images\1740054589288.png' alt='1740054589288' style='zoom: 50%;' /&gt;

4. 创建外网连接的地址

   1. 浏览器输入： http://香橙派的局域网ip:9200 

   2. 创建隧道&lt;img src='C:\Users\wuguangzhe\AppData\Roaming\Typora\typora-user-images\1740054809731.png' alt='1740054809731' style='zoom: 25%;' /&gt;

   3. 在状态-在线隧道列表中可以看到自己创建的隧道和公网地址

      &lt;img src='C:\Users\wuguangzhe\AppData\Roaming\Typora\typora-user-images\1740054947762.png' alt='1740054947762' style='zoom:25%;' /&gt;

5. 创建的是免费隧道，公网地址24小时内会随机变化，固定的地址需要付费升级







。</description><guid isPermaLink="true">https://niffffty.github.io/post/xiang-cheng-pai-Orange%20PI%20zero3-shi-xian-NAS.html</guid><pubDate>Thu, 20 Feb 2025 12:40:51 +0000</pubDate></item><item><title>沉没成本</title><link>https://niffffty.github.io/post/chen-mei-cheng-ben.html</link><description># 沉没成本

- **概念**：已经付出，不可回收的成本

- **决策时不应考虑沉没成本**

  - **来源**：2001年诺贝尔经济学奖得主斯蒂格里茨在著作《经济学》中提到： “如果一项开支已经付出并且不管作出何种选择都不能收回，一个理性的人就会忽略它。</description><guid isPermaLink="true">https://niffffty.github.io/post/chen-mei-cheng-ben.html</guid><pubDate>Fri, 14 Feb 2025 01:16:51 +0000</pubDate></item><item><title>Cursor：AI编程助手</title><link>https://niffffty.github.io/post/Cursor%EF%BC%9AAI-bian-cheng-zhu-shou.html</link><description># cursor：AI编程助手
### 概括
Cursor 是一个基于人工智能的编程助手，提供智能代码补全、错误检测和自然语言处理功能，帮助开发者更高效地编写和优化代码。</description><guid isPermaLink="true">https://niffffty.github.io/post/Cursor%EF%BC%9AAI-bian-cheng-zhu-shou.html</guid><pubDate>Thu, 23 Jan 2025 13:00:16 +0000</pubDate></item><item><title>信息聚合工具Follow</title><link>https://niffffty.github.io/post/xin-xi-ju-he-gong-ju-Follow.html</link><description>### 简介&#13;
&#13;
Follow可以订阅文章、图片、视频、音频等，用一个软件包揽信息获取的所有渠道，帮助摆脱信息茧房，提高信息收集效率。</description><guid isPermaLink="true">https://niffffty.github.io/post/xin-xi-ju-he-gong-ju-Follow.html</guid><pubDate>Fri, 10 Jan 2025 10:14:25 +0000</pubDate></item><item><title>挑战每天精听2个小时英语听力</title><link>https://niffffty.github.io/post/tiao-zhan-mei-tian-jing-ting-2-ge-xiao-shi-ying-yu-ting-li.html</link><description>### 挑战每天精听2个小时英语听力

- [x] 2025.1.7

- [x] 2025.1.8

- [x] 2025.1.9

- [x] 2025.1.10

- [x] 2025.1.11

- [ ] 2025.1.12

- [x] 2025.1.13

- [x] 2025.1.14

- [ ] 2025.1.15

- [x] 2025.1.16

- [x] 2025.1.17

- [x] 2025.1.18

- [x] 2025.1.19

- [x] 2025.1.20

- [x] 2025.1.21

- [x] 2025.1.22

- [x] 2025.1.23

- [ ] 2025.1.24

- [x] 2025.1.25

- [x] 2025.1.26

- [x] 2025.1.27

- [ ] 2025.1.28

- [ ] 2025.1.29

- [ ] 2025.1.30

- [x] 2025.1.31

- [x] 2025.2.1

- [x] 2025.2.2

- [x] 2025.2.3

- [x] 2025.2.4

- [x] 2025.2.5

- [x] 2025.2.6

- [x] 2025.2.7

- [x] 2025.2.8

- [ ] 2025.2.9

- [x] 2025.2.10

- [ ] 2025.2.11

- [x] 2025.2.12

- [ ] 2025.2.13

- [x] 2025.2.14

- [x] 2025.2.15

- [x] 2025.2.16

- [x] 2025.2.17

- [x] 2025.2.18

- [ ] 2025.2.19

- [ ] 2025.2.20

- [ ] 2025.2.21

- [ ] 2025.2.22

- [ ] 2025.2.23

- [ ] 2025.2.24

- [ ] 2025.2.25

- [ ] 2025.2.26

- [ ] 2025.2.27

- [ ] 2025.2.28

- [ ] 2025.3.1

- [ ] 2025.3.2

- [ ] 2025.3.3

- [ ] 2025.3.4

- [ ] 2025.3.5

- [ ] 2025.3.6

- [ ] 2025.3.7

- [ ] 2025.3.8

- [ ] 2025.3.9

- [ ] 2025.3.10

- [ ] 2025.3.11。</description><guid isPermaLink="true">https://niffffty.github.io/post/tiao-zhan-mei-tian-jing-ting-2-ge-xiao-shi-ying-yu-ting-li.html</guid><pubDate>Thu, 09 Jan 2025 14:51:23 +0000</pubDate></item><item><title>使用Gmeek博客框架搭建个人博客</title><link>https://niffffty.github.io/post/shi-yong-Gmeek-bo-ke-kuang-jia-da-jian-ge-ren-bo-ke.html</link><description> ### fork框架&#13;
&#13;
- 打开框架网站`github.com/Meekdai/Gmeek`，找到安装--通过模板创建仓库&#13;
- 修改自己的仓库名，创建仓库&#13;
- `Settings--Pages`，修改`Source`为`Github Actions`&#13;
&#13;
### 通过Issues写作&#13;
&#13;
- 点击仓库的`Issues--new issues`，修改标题，右侧添加一个`labels`，写作完成，点击`submit new issues`&#13;
- 仓库--Actions可以可以看见正在构建，构建完即可打开仓库首页的域名&#13;
&#13;
### 修改配置&#13;
&#13;
- 修改配置：仓库--代码--`config.json`--编辑文件，修改title、subTitle、avatarUrl即标题、描述、头像，修改完成后点击右上角`Commit changes`&#13;
- 手动构建(每次修改完config.json需要手动构建一次)：仓库--Actions--左侧build Gmeek--右侧Run workflow--Run workflow&#13;
&#13;
&#13;
&#13;
### 自定义域名&#13;
&#13;
&#13;
&#13;
&#13;
&#13;
### 参考文献&#13;
&#13;
- https://www.bilibili.com/video/BV1GM4m1m7ZD/?spm_id_from=333.999.0.0&amp;vd_source=30154a2ba097dc64dcb082bf3c72da38。</description><guid isPermaLink="true">https://niffffty.github.io/post/shi-yong-Gmeek-bo-ke-kuang-jia-da-jian-ge-ren-bo-ke.html</guid><pubDate>Thu, 09 Jan 2025 14:14:05 +0000</pubDate></item></channel></rss>